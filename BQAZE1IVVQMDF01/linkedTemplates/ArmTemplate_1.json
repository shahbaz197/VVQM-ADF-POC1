{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "BQAZE1IVVQMDF01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_BPR_ALL_FILES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_VVQM",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BPR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Batch Production Record/Raw/sftp_bpr_raw",
						"fileSystem": "mq-veevaqualitymanagement"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_BPR_API_WATERMARK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "BPR Incremental Cleansed Table ",
				"linkedServiceName": {
					"referenceName": "LS_ADLS_VVQM",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BPR"
				},
				"annotations": [],
				"type": "Orc",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Batch Production Record/Control_Metadata/bpr_api_watermark",
						"fileSystem": "mq-veevaqualitymanagement"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_BPR_FILE_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_VVQM",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "BPR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "Batch Production Record/Raw/sftp_bpr_raw",
						"fileSystem": "mq-veevaqualitymanagement"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_BPR_SESSION_DETAILS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_VVQM",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BPR"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('bpr_session_details_',formatDateTime(adddays(utcnow(),0),'yyyy'),'-',formatDateTime(adddays(utcnow(),0),'MM'),'-', formatDateTime(adddays(utcnow(),0),'dd'), '_' ,formatDateTime(adddays(utcnow(),0),'hh'), formatDateTime(adddays(utcnow(),0),'mm'), formatDateTime(adddays(utcnow(),0),'ss'),'.avro')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Batch Production Record/Control_Metadata/bpr_session_details/','datepart=',formatDateTime(adddays(utcnow(),0),'yyyy'),'-',formatDateTime(adddays(utcnow(),0),'MM'),'-', formatDateTime(adddays(utcnow(),0),'dd'))",
							"type": "Expression"
						},
						"fileSystem": "mq-veevaqualitymanagement"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_BPR_SRC_INC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "BPR Incremental Cleansed Table ",
				"linkedServiceName": {
					"referenceName": "LS_ADLS_VVQM",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BPR"
				},
				"annotations": [],
				"type": "Orc",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Batch Production Record/Stage/bpr_inc",
						"fileSystem": "mq-veevaqualitymanagement"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SFTP_AUTOUD_INBND_FILE_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SFTP_AUTOUD_LILLY_CONN",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "AUTOUD"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "/pickup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SFTP_AUTOUD_INBND_LILLY_CONN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SFTP_AUTOUD_LILLY_CONN",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AUTOUD"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": "/pickup"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SFTP_AUTOUD_OUTBND_LILLY_CONN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SFTP_AUTOUD_LILLY_CONN",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AUTOUD"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": "/drop"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SFTP_BPR_FILE_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SFTP_BPR_LILLY_CONN",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "BPR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "/pickup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SFTP_BPR_LILLY_CONN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SFTP_BPR_LILLY_CONN",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BPR"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": "/pickup"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_BPR_GETFILES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_VVQM",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BPR"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AUTOUD_INBND_EXECUTE_DATALOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "PL_AUTOUD_INBND_EXECUTE_DATALOAD.......",
				"activities": [
					{
						"name": "insert_inprogress_status",
						"description": "insert_inprogress_status",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "plant_code",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[VVQM].[usp_update_inprogress]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@pipeline().parameters.File_Name",
										"type": "Expression"
									},
									"type": "String"
								},
								"fileinserted": {
									"value": {
										"value": "@pipeline().parameters.File_inserted",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelinename": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelinerunid": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_VVQM",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "bprmeterials_dataframe",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "insert_inprogress_status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/MQ - Veeva Quality Management (VVQM)/Auto-UD Inbound/Raw_Stage_Codes/raw_load",
							"baseParameters": {
								"valsource_filename": {
									"value": "@pipeline().parameters.File_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ADB_VVQM",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "plant_code",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "plantcode",
							"value": {
								"value": "@pipeline().parameters.plant_code",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update_success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "bprmeterials_dataframe",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[VVQM].[usp_update_success]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@pipeline().parameters.File_Name",
										"type": "Expression"
									},
									"type": "String"
								},
								"fileinserted": {
									"value": {
										"value": "@pipeline().parameters.File_inserted",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelinename": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelinerunid": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_VVQM",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "update_failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "bprmeterials_dataframe",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[VVQM].[usp_update_error]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@pipeline().parameters.File_Name",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelinename": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelinerunid": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_VVQM",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Deleteprocessedfilesfromsftp",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "bprmeterials_dataframe",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_SFTP_AUTOUD_INBND_FILE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"filename": "@pipeline().parameters.File_Name"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "Web_Failure_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "bprmeterials_dataframe",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "insert_inprogress_status",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"Error while executing STORED PROCEDURE activity or NOTEBOOK activity\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"File_Name": {
						"type": "string"
					},
					"Plant_code": {
						"type": "string"
					},
					"File_inserted": {
						"type": "string"
					},
					"var_email_address": {
						"type": "string"
					}
				},
				"variables": {
					"plantcode": {
						"type": "String"
					}
				},
				"folder": {
					"name": "AUTOUD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_AUTOUD_INBND_FILE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AUTOUD_OUTBND_EXECUTE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "AUTOUD_OUTBND_EXECUTE",
				"activities": [
					{
						"name": "AutoUD_OutBnd_Raw2Stage",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/MQ - Veeva Quality Management (VVQM)/Auto-UD Outbound/Raw_Stage_Codes/raw2stage_load"
						},
						"linkedServiceName": {
							"referenceName": "LS_ADB_VVQM",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Web_AUTOUD_Notebook_Failure_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "AutoUD_OutBnd_Raw2Stage",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"AutoUD_OutBnd_Raw2Stage Notebook Failed\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy_FinalDataset_ADLS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach_Source_FileNm",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_AUTOUD_OUTBND_POST",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_AUTOUD_OUTBND_SFTP",
								"type": "DatasetReference",
								"parameters": {
									"filename": "01974"
								}
							}
						]
					},
					{
						"name": "Copy_FinalDataset_SFTP",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_FinalDataset_ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy_TouchFile_ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "SftpWriteSettings",
									"operationTimeout": "01:00:00",
									"useTempFileRename": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_AUTOUD_OUTBND_SFTP_IN",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SFTP_AUTOUD_OUTBND_LILLY_CONN",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Web_AUTOUD_Copy_FinalDataset_ADLS_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy_FinalDataset_ADLS",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "Copy_TouchFile_ADLS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"Copy FinalDataset to ADLS Failed\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web_AUTOUD_Copy_FinalDataset_SFTP_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy_FinalDataset_SFTP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"Copy_FinalDataset_SFTP Failed\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get_Source_FileNm",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "AutoUD_OutBnd_Raw2Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_AUTOUD_OUTBND_SFTP_IN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "ForEach_Source_FileNm",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_Source_FileNm",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_Source_FileNm').output.childitems",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 5,
							"activities": [
								{
									"name": "Delete_Old_ADLS",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Copy Old_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_AUTOUD_OUTBND_SFTP_DELFILES",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true
										}
									}
								},
								{
									"name": "Copy Old_ADLS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_AUTOUD_OUTBND_SFTP_DELFILES",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_AUTOUD_OUTBND_SFTP_ALLFILES",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Copy_TouchFile_ADLS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach_Source_FileNm",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_AUTOUD_OUTBND_TOUCHFILE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_AUTOUD_OUTBND_SFTP_TOUCHFILE",
								"type": "DatasetReference",
								"parameters": {
									"filename": "01974"
								}
							}
						]
					}
				],
				"parameters": {
					"var_email_address": {
						"type": "string"
					}
				},
				"variables": {
					"filename": {
						"type": "String"
					}
				},
				"folder": {
					"name": "AUTOUD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_AUTOUD_OUTBND_LILLY_CONN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BPR_EXECUTE_DATALOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "BPR_EXECUTE_DATALOAD",
				"activities": [
					{
						"name": "insert_inprogress_status",
						"description": "insert_inprogress_status",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "plant_code",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[VVQM].[usp_update_inprogress]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@pipeline().parameters.File_Name",
										"type": "Expression"
									},
									"type": "String"
								},
								"fileinserted": {
									"value": {
										"value": "@pipeline().parameters.File_inserted",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelinename": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelinerunid": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_VVQM",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "bprmeterials_dataframe",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "insert_inprogress_status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/MQ - Veeva Quality Management (VVQM)/Batch Production Record/Raw_Stage_Codes/raw_load",
							"baseParameters": {
								"valsource_filename": {
									"value": "@pipeline().parameters.File_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ADB_VVQM",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "plant_code",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "plantcode",
							"value": {
								"value": "@pipeline().parameters.plant_code",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update_success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "bprmeterials_dataframe",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[VVQM].[usp_update_success]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@pipeline().parameters.File_Name",
										"type": "Expression"
									},
									"type": "String"
								},
								"fileinserted": {
									"value": {
										"value": "@pipeline().parameters.File_inserted",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelinename": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelinerunid": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_VVQM",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "update_failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "bprmeterials_dataframe",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "insert_inprogress_status",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[VVQM].[usp_update_error]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@pipeline().parameters.File_Name",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelinename": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelinerunid": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_VVQM",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Deleteprocessedfilesfromsftp",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "bprmeterials_dataframe",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_SFTP_BPR_FILE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.File_Name",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "Web_Failure_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "insert_inprogress_status",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "bprmeterials_dataframe",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"Error while executing STORED PROCEDURE activity or NOTEBOOK activity\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"File_Name": {
						"type": "string"
					},
					"Plant_code": {
						"type": "string"
					},
					"File_inserted": {
						"type": "string"
					},
					"var_email_address": {
						"type": "string"
					}
				},
				"variables": {
					"plantcode": {
						"type": "String"
					}
				},
				"folder": {
					"name": "BPR"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_BPR_FILE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BRP_WEB_LOOKUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "BRP_WEB_APP_LOOKUP",
				"activities": [
					{
						"name": "Lookup_Cleansed_Data",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Stored Procedure Del",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OrcSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.orc"
								}
							},
							"dataset": {
								"referenceName": "DS_ADLS_BPR_SRC_INC",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_Cleansed_Data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Cleansed_Data",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Url",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Password",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set UserName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Cleansed_Data').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Execute_veeva_bpr_web_app",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_BRP_WEB_APP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"url": {
												"value": "@variables('url')",
												"type": "Expression"
											},
											"password": {
												"value": "@variables('password')",
												"type": "Expression"
											},
											"username": {
												"value": "@variables('username')",
												"type": "Expression"
											},
											"val_plant_code": {
												"value": "@item().plant_code",
												"type": "Expression"
											},
											"val_name": {
												"value": "@item().val_name",
												"type": "Expression"
											},
											"val_batch_number__c": {
												"value": "@item().batch_id",
												"type": "Expression"
											},
											"val_material_id__c": {
												"value": "@item().material_id",
												"type": "Expression"
											},
											"val_process_order_number__c": {
												"value": "@item().order_number",
												"type": "Expression"
											},
											"val_production_version__c": {
												"value": "@item().production_version",
												"type": "Expression"
											},
											"var_email_address": {
												"value": "@pipeline().parameters.var_email_address",
												"type": "Expression"
											},
											"val_filename": {
												"value": "@item().source_filename",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Set load_txn_tm",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Execute_veeva_bpr_web_app",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "val_last_loaded_txn",
										"value": {
											"value": "@item().load_txn_tm",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Copy_Bpr_Session_Details",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach_Cleansed_Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [source_name]\n\t\t, [url]\n      ,[sessionId]\n      ,[vaultId]\n      ,[name]\n      ,[plant_code]\n      ,[organization__c]\n      ,[package_class__c]\n      ,[batch_number__c]\n      ,[material_id__c]\n      ,[process_order_number__c]\n      ,[production_version__c]\n      ,[response_status]\n      ,[data_response_status]\n      ,[data_response_desc]\n\t  ,source_filename\n      ,[pipeline_runid]\n      ,[pipeline_name]\n      ,[load_txn_tm]\n  FROM [VVQM].[Bpr_Session_Details];",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AvroSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "AvroWriteSettings",
									"quoteAllText": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_SQL_BPR_GETFILES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_BPR_SESSION_DETAILS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Web_ForEach_Cleansed_Data_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach_Cleansed_Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"BPR ForEach_Cleansed_Data Failed\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web_Session_Transfer_Failure_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy_Bpr_Session_Details",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"BPR Session Details Transfer Failed\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Stored Procedure Del",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[VVQM].[delete_session_details_proc]",
							"storedProcedureParameters": {
								"source_name": {
									"value": "bpr",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_VVQM",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Stored Procedure Delta_BPR_API",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach_Cleansed_Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[VVQM].[delta_API_call_proc]",
							"storedProcedureParameters": {
								"last_loaded_txn": {
									"value": {
										"value": "@variables('val_last_loaded_txn')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipeline_load_txn_tm": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_runid": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"source_name": {
									"value": "bpr",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_VVQM",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Web Url",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://bqaze1ivvqmkv01.vault.azure.net/secrets/VVQM-BPR-URL/?api-version=7.0",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Set UserName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web UserName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "username",
							"value": {
								"value": "@activity('Web UserName').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Password",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web Password",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "password",
							"value": {
								"value": "@activity('Web Password').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Url",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web Url",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "url",
							"value": {
								"value": "@activity('Web Url').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web Password",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://bqaze1ivvqmkv01.vault.azure.net/secrets/VVQM-BPR-PASSWORD/?api-version=7.0",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Web UserName",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://bqaze1ivvqmkv01.vault.azure.net/secrets/VVQM-BPR-USER/?api-version=7.0",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"parameters": {
					"var_email_address": {
						"type": "string"
					}
				},
				"variables": {
					"username": {
						"type": "String"
					},
					"password": {
						"type": "String"
					},
					"url": {
						"type": "String"
					},
					"val_last_loaded_txn": {
						"type": "String",
						"defaultValue": "1900-01-01T00:00:00Z"
					}
				},
				"folder": {
					"name": "BPR"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_BPR_SRC_INC')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_BPR_GETFILES')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_BPR_SESSION_DETAILS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AUTOUD_INBND_SRC_DATA_PULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": ".PL_AUTOUD_INBND_SRC_DATA_PULL...",
				"activities": [
					{
						"name": "readfilenames_from_lilly",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "checkforfiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_SFTP_AUTOUD_INBND_LILLY_CONN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "loadmetadattotable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "readfilenames_from_lilly",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('readfilenames_from_lilly').output.childitems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "getlastmodifieddateof_file",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SFTP_AUTOUD_INBND_FILE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"filename": "@item().name"
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "modifieddate",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "getlastmodifieddateof_file",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "modifieddate",
										"value": {
											"value": "@activity('getlastmodifieddateof_file').output.lastModified",
											"type": "Expression"
										}
									}
								},
								{
									"name": "insert_to_filelog",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "modifieddate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[VVQM].[usp_insert_filelog_veeva]",
										"storedProcedureParameters": {
											"filename": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											},
											"filesource": {
												"value": "AutoUD",
												"type": "String"
											},
											"filemodified": {
												"value": {
													"value": "@activity('getlastmodifieddateof_file').output.lastModified",
													"type": "Expression"
												},
												"type": "Datetime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQL_VVQM",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Web_Failure_Notification_",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "insert_to_filelog",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"Error while executing Auto Ud INSERT_TO_FILELOG activity\"\n}",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "get_filenames",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "loadmetadattotable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select distinct File_Name,Plant_code,Last_Modified,File_inserted from [VVQM].[Veeva_File_Log] where File_processed is null and file_source='AutoUD' order by Last_Modified",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_SQL_BPR_GETFILES",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "mergefiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "copyfromlillytoazurestorage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_filenames').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "filesmerging",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_AUTOUD_INBND_EXECUTE_DATALOAD",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"File_Name": {
												"value": "@item().File_Name",
												"type": "Expression"
											},
											"Plant_code": {
												"value": "@item().Plant_code",
												"type": "Expression"
											},
											"File_inserted": {
												"value": "@item().File_inserted",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Web_Failure_Notification_onexecutechild",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "filesmerging",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"Error while executing EXECUTE PIPELINE activity\"\n}",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "checkforfiles",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_SFTP_AUTOUD_INBND_LILLY_CONN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:00:30",
							"sleep": 10,
							"childItems": true
						}
					},
					{
						"name": "copyfromlillytoazurestorage",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_filenames').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "copy_from_lilly_to_azurestorage",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Deleteiffileexists",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_SFTP_AUTOUD_INBND_FILE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"filename": "@item().File_Name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_AUTOUD_INBND_ALL_FILES",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Deleteiffileexists",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_AUTOUD_INBND_FILE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().File_Name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true
										}
									}
								},
								{
									"name": "Web_Failure_Notification_oncopyto_Azurestage",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "copy_from_lilly_to_azurestorage",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"Error while executing Auto Ud COPY DATA activity while coping data from lilly to azure storage\"\n}",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Web_Failure_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "checkforfiles",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"AutoUD File Don't Exist in SFTP Location\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"var_email_address": {
						"type": "string"
					}
				},
				"variables": {
					"modifieddate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "AUTOUD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_AUTOUD_INBND_LILLY_CONN')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_BPR_GETFILES')]",
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_AUTOUD_INBND_FILE_SRC')]",
				"[concat(variables('factoryId'), '/pipelines/PL_AUTOUD_INBND_EXECUTE_DATALOAD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AUTOUD_INBND_WEB_LOOKUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "BRP_WEB_APP_LOOKUP...",
				"activities": [
					{
						"name": "Lookup_Cleansed_Data",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Stored Procedure Del",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OrcSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.orc"
								}
							},
							"dataset": {
								"referenceName": "DS_ADLS_AUTOUD_INBND_SRC_INC",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_Cleansed_Data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set_SessionId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Cleansed_Data').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Execute_veeva_bpr_web_app",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_AUTOUD_INBND_WEB_APP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"url": {
												"value": "@variables('url')",
												"type": "Expression"
											},
											"password": {
												"value": "@variables('password')",
												"type": "Expression"
											},
											"username": {
												"value": "@variables('username')",
												"type": "Expression"
											},
											"val_plant_code": {
												"value": "@item().plant_code",
												"type": "Expression"
											},
											"val_email_address": {
												"value": "@pipeline().parameters.var_email_address",
												"type": "Expression"
											},
											"val_material": {
												"value": "@item().material_number",
												"type": "Expression"
											},
											"val_batch": {
												"value": "@item().batch",
												"type": "Expression"
											},
											"val_source_filename": {
												"value": "@item().source_filename",
												"type": "Expression"
											},
											"val_sessionId": {
												"value": "@variables('val_sessionId')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Set load_txn_tm",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Execute_veeva_bpr_web_app",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "val_last_loaded_txn",
										"value": {
											"value": "@item().load_txn_tm",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Copy_AutoUd_Inbnd_Session_Details",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach_Cleansed_Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [source_name]\n      ,[url]\n      ,[sessionId]\n      ,[plant_code]\n      ,[material_number]\n      ,[batch]\n      ,[organization__c]\n      ,[api_name__v]\n      ,[response_status]\n      ,[id]\n      ,[state__v]\n      ,[name__v]\n      ,[final_criticality__c]\n      ,[initial_criticality__c]\n\t  ,[batch_quality_event__cr]\n      ,[source_filename]\n      ,[pipeline_runid]\n      ,[pipeline_name]\n      ,[load_txn_tm]\n  FROM [VVQM].[Autoud_Inbnd_Session_Details]",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AvroSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "AvroWriteSettings",
									"quoteAllText": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_SQL_BPR_GETFILES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_AUTOUD_INBND_SESSION_DETAILS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Web_Session_Transfer_Failure_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy_AutoUd_Inbnd_Session_Details",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-87.eastus.logic.azure.com:443/workflows/b5ceb1071908488fa27b7b7470c9e405/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=BWFiK2D6vtS0Z0LofAoo8vUnUKt3sAmcOQ47M0l1Djw",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"Auto UD Session Details Transfer Failed\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web_ForEach_Cleansed_Data_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach_Cleansed_Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-87.eastus.logic.azure.com:443/workflows/b5ceb1071908488fa27b7b7470c9e405/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=BWFiK2D6vtS0Z0LofAoo8vUnUKt3sAmcOQ47M0l1Djw",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"Auto UD ForEach_Cleansed_Data Failed\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Stored Procedure Del",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[VVQM].[delete_session_details_proc]",
							"storedProcedureParameters": {
								"source_name": {
									"value": "autoud_inbnd",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_VVQM",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Stored Procedure Delta_BPR_API",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach_Cleansed_Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[VVQM].[delta_API_call_proc]",
							"storedProcedureParameters": {
								"last_loaded_txn": {
									"value": {
										"value": "@variables('val_last_loaded_txn')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipeline_load_txn_tm": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_runid": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"source_name": {
									"value": "autoud_inbnd",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_VVQM",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Web Url",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://bpaze1ivvqmkv01.vault.azure.net/secrets/VVQM-AUTOUD-URL/?api-version=7.0",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Set UserName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web UserName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "username",
							"value": {
								"value": "@activity('Web UserName').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Password",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web Password",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "password",
							"value": {
								"value": "@activity('Web Password').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Url",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web Url",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "url",
							"value": {
								"value": "@activity('Web Url').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web Password",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://bpaze1ivvqmkv01.vault.azure.net/secrets/VVQM-AUTOUD-PASSWORD/?api-version=7.0",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Web UserName",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://bpaze1ivvqmkv01.vault.azure.net/secrets/VVQM-AUTOUD-USER/?api-version=7.0",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "EXE_PL_AUTOUD_OUTBND_EXECUTE",
						"description": "Execute Pipeline to Extract the Data from Inbound & Post to Outbound API",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy_AutoUd_Inbnd_Session_Details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_AUTOUD_OUTBND_EXECUTE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"var_email_address": {
									"value": "@pipeline().parameters.var_email_address",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Web_Login",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set UserName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Url",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Password",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup_Cleansed_Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://@{variables('url')}/api/v19.3/auth?username=@{variables('username')}&password=@{variables('password')}",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\"username\":\"@{variables('url')}\",\"password=\":\"@{variables('password')}\"}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set_SessionId",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web_Login",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "val_sessionId",
							"value": {
								"value": "@activity('Web_Login').output.sessionId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web_Failure_Login_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Web_Login",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-87.eastus.logic.azure.com:443/workflows/b5ceb1071908488fa27b7b7470c9e405/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=BWFiK2D6vtS0Z0LofAoo8vUnUKt3sAmcOQ47M0l1Djw",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"Login Failed for @{variables('username')}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"var_email_address": {
						"type": "string"
					}
				},
				"variables": {
					"username": {
						"type": "String"
					},
					"password": {
						"type": "String"
					},
					"url": {
						"type": "String"
					},
					"val_last_loaded_txn": {
						"type": "String",
						"defaultValue": "1900-01-01T00:00:00Z"
					},
					"val_sessionId": {
						"type": "String"
					}
				},
				"folder": {
					"name": "AUTOUD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_BPR_GETFILES')]",
				"[concat(variables('factoryId'), '/pipelines/PL_AUTOUD_OUTBND_EXECUTE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BPR_SRC_DATA_PULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "BPR_SRC_DATA_PULL..",
				"activities": [
					{
						"name": "readfilenames_from_lilly",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "checkforfiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_SFTP_BPR_LILLY_CONN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "loadmetadattotable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "readfilenames_from_lilly",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('readfilenames_from_lilly').output.childitems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "getlastmodifieddateof_file",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SFTP_BPR_FILE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"filename": "@item().name"
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "modifieddate",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "getlastmodifieddateof_file",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "modifieddate",
										"value": {
											"value": "@activity('getlastmodifieddateof_file').output.lastModified",
											"type": "Expression"
										}
									}
								},
								{
									"name": "insert_to_filelog",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "modifieddate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[VVQM].[usp_insert_filelog_veeva]",
										"storedProcedureParameters": {
											"filename": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											},
											"filesource": {
												"value": "BPR",
												"type": "String"
											},
											"filemodified": {
												"value": {
													"value": "@activity('getlastmodifieddateof_file').output.lastModified",
													"type": "Expression"
												},
												"type": "Datetime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQL_VVQM",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Web_Failure_Notification_",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "insert_to_filelog",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"Error while executing BPR INSERT_TO_FILELOG activity\"\n}",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "get_filenames",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "loadmetadattotable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select distinct File_Name,Plant_code,Last_Modified,File_inserted from [VVQM].Veeva_File_Log where File_processed is null and file_source='BPR' order by Last_Modified",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_SQL_BPR_GETFILES",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "mergefiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "copyfromlillytoazurestorage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_filenames').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "filesmerging",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_BPR_EXECUTE_DATALOAD",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"File_Name": {
												"value": "@item().File_Name",
												"type": "Expression"
											},
											"Plant_code": {
												"value": "@item().Plant_code",
												"type": "Expression"
											},
											"File_inserted": {
												"value": "@item().File_inserted",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Web_Failure_Notification_onexecutechild",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "filesmerging",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"Error while executing EXECUTE PIPELINE activity\"\n}",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "checkforfiles",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_SFTP_BPR_LILLY_CONN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:00:20",
							"sleep": 10,
							"childItems": true
						}
					},
					{
						"name": "copyfromlillytoazurestorage",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_filenames').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "copy_from_lilly_to_azurestorage",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Deleteiffileexists",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_SFTP_BPR_FILE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().File_Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_BPR_ALL_FILES",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Deleteiffileexists",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_BPR_FILE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"filename": "@item().File_Name"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true
										}
									}
								},
								{
									"name": "Web_Failure_Notification_oncopyto_Azurestage",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "copy_from_lilly_to_azurestorage",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"Error while executing BPR COPY DATA activity while coping data from lilly to azure storage\"\n}",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Web_Failure_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "checkforfiles",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"Batch Production Record File Don't Exist in SFTP Location\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"var_email_address": {
						"type": "string"
					}
				},
				"variables": {
					"modifieddate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "BPR"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_BPR_LILLY_CONN')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_BPR_GETFILES')]",
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_BPR_FILE_SRC')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BPR_EXECUTE_DATALOAD')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_BPR_ALL_FILES')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_BPR_FILE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BRP_WEB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "BRP_WEB_APP_LOOKUP",
				"activities": [
					{
						"name": "Lookup_Cleansed_Metadata",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Bpr_Raw2Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OrcSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.orc"
								}
							},
							"dataset": {
								"referenceName": "DS_ADLS_BPR_API_WATERMARK",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Bpr_Raw2Stage",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/MQ - Veeva Quality Management (VVQM)/Batch Production Record/Raw_Stage_Codes/raw2stage_load"
						},
						"linkedServiceName": {
							"referenceName": "LS_ADB_VVQM",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Web_Notebook_Failure_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Bpr_Raw2Stage",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-06.eastus.logic.azure.com:443/workflows/20b2d83527654311b8ff6ebb659a9563/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I6ZUHfsOjhzZY1J0Umk8UAKuoboQfKoEQ-LBIRyJqAg",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"BPR Notebook Login Failed\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup_Metadata",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Bpr_Raw2Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT CONVERT(varchar, last_loaded_txn,20) as val_last_loaded_txn\nFROM [VVQM].[Delta_API_Call]\nwhere [source_name] = 'bpr' ",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_SQL_BPR_GETFILES",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_Cleansed_Data_source",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Cleansed_Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Cleansed_Metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Set Inc Time",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "inc_load_time",
										"value": {
											"value": "@{concat(substring(item().load_txn_tm,0,10),' ',substring(item().load_txn_tm,11,8))}",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "ForEach_Cleansed_Data_Metadata",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Set Metadata Time",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "metadata_load_time",
										"value": {
											"value": "@item().val_last_loaded_txn",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "If Condition_autoud_Inbnd_WebApp_Lookup",
						"description": "IF condition is ok, this will call PL_AUTOUD_INBND_WEB_APP_LOOKUP",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ForEach_Cleansed_Data_Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ForEach_Cleansed_Data_source",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('inc_load_time'),variables('metadata_load_time'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set Final_ValuesNotMatching",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "final_set",
										"value": "0"
									}
								},
								{
									"name": "Execute_PL_BPR_WEB_APP_LOOKUP",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Final_ValuesNotMatching",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_BRP_WEB_LOOKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"var_email_address": {
												"value": "@pipeline().parameters.var_email_address",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set Final_ValuesMatching",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "final_set",
										"value": "1"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"var_email_address": {
						"type": "string",
						"defaultValue": "sneh.gaur@elanco.com"
					}
				},
				"variables": {
					"metadata_load_time": {
						"type": "String"
					},
					"inc_load_time": {
						"type": "String"
					},
					"final_set": {
						"type": "String"
					}
				},
				"folder": {
					"name": "BPR"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_BPR_API_WATERMARK')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_BPR_GETFILES')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BRP_WEB_LOOKUP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AUTOUD_INBND_WEB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "PL_AUTOUD_INBND_WEB",
				"activities": [
					{
						"name": "Lookup_Cleansed_Metadata",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "AutoUD_InBnd_Raw2Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OrcSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.orc"
								}
							},
							"dataset": {
								"referenceName": "DS_ADLS_AUTOUD_INBND_API_WATERMARK",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_Cleansed_Data_source",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Cleansed_Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Cleansed_Metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Set Inc Time",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "inc_load_time",
										"value": {
											"value": "@{concat(substring(item().load_txn_tm,0,10),' ',substring(item().load_txn_tm,11,8))}",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup_Metadata",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "AutoUD_InBnd_Raw2Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT CONVERT(varchar, last_loaded_txn,20) as val_last_loaded_txn\nFROM [VVQM].[Delta_API_Call]\nwhere [source_name] = 'autoud_inbnd' ",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_SQL_BPR_GETFILES",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_Cleansed_Data_Metadata",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Set Metadata Time",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "metadata_load_time",
										"value": {
											"value": "@item().val_last_loaded_txn",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "If Condition_autoud_Inbnd_WebApp_Lookup",
						"description": "IF condition is ok, this will call PL_AUTOUD_INBND_WEB_APP_LOOKUP",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ForEach_Cleansed_Data_Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ForEach_Cleansed_Data_source",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('inc_load_time'),variables('metadata_load_time'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set Final_ValuesNotMatching",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "final_set",
										"value": "0"
									}
								},
								{
									"name": "Execute_PL_AUTOUD_INBND_WEB_APP_LOOKUP",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Final_ValuesNotMatching",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_AUTOUD_INBND_WEB_LOOKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"var_email_address": {
												"value": "@pipeline().parameters.var_email_address",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set Final_ValuesMatching",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "final_set",
										"value": "1"
									}
								}
							]
						}
					},
					{
						"name": "AutoUD_InBnd_Raw2Stage",
						"description": "..",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/MQ - Veeva Quality Management (VVQM)/Auto-UD Inbound/Raw_Stage_Codes/raw2stage_load"
						},
						"linkedServiceName": {
							"referenceName": "LS_ADB_VVQM",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Web_Notebook_Failure_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "AutoUD_InBnd_Raw2Stage",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-87.eastus.logic.azure.com:443/workflows/b5ceb1071908488fa27b7b7470c9e405/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=BWFiK2D6vtS0Z0LofAoo8vUnUKt3sAmcOQ47M0l1Djw",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n \"EmailTo\":\"@{pipeline().parameters.var_email_address}\",\n \"PipelineName\":\"@{pipeline().Pipeline}\",\n \"PipelineRunId\":\"@{pipeline().RunId}\",\n \"PipelineTime\":\"@{pipeline().TriggerTime}\",\n \"Subject\":\"Pipeline Failed: @{pipeline().Pipeline}\",\n \"ErrorMessage\":\"Notebook Login Failed\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"var_email_address": {
						"type": "string"
					}
				},
				"variables": {
					"metadata_load_time": {
						"type": "String"
					},
					"inc_load_time": {
						"type": "String"
					},
					"final_set": {
						"type": "String"
					}
				},
				"folder": {
					"name": "AUTOUD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_BPR_GETFILES')]",
				"[concat(variables('factoryId'), '/pipelines/PL_AUTOUD_INBND_WEB_LOOKUP')]"
			]
		}
	]
}